[{"E:\\repofrontend\\src\\index.js":"1","E:\\repofrontend\\src\\App.js":"2","E:\\repofrontend\\src\\reportWebVitals.js":"3","E:\\repofrontend\\src\\layouts\\loader\\Loader.js":"4","E:\\repofrontend\\src\\routes\\Router.js":"5","E:\\repofrontend\\src\\layouts\\FullLayout.js":"6","E:\\repofrontend\\src\\layouts\\LoginLayout.js":"7","E:\\repofrontend\\src\\layouts\\HomeLayout.js":"8","E:\\repofrontend\\src\\views\\Starter.js":"9","E:\\repofrontend\\src\\views\\ProductAdd.js":"10","E:\\repofrontend\\src\\views\\Product.js":"11","E:\\repofrontend\\src\\views\\Category.js":"12","E:\\repofrontend\\src\\views\\Login1.js":"13","E:\\repofrontend\\src\\views\\home\\Home.js":"14","E:\\repofrontend\\src\\views\\home\\ProductDetail.js":"15","E:\\repofrontend\\src\\Service\\Loginservice.js":"16","E:\\repofrontend\\src\\layouts\\Sidebar.js":"17","E:\\repofrontend\\src\\layouts\\Header.js":"18","E:\\repofrontend\\src\\layouts\\Logo.js":"19","E:\\repofrontend\\src\\components\\dashboard\\SalesChart.js":"20","E:\\repofrontend\\src\\components\\dashboard\\Feeds.js":"21","E:\\repofrontend\\src\\components\\dashboard\\ProductTables.js":"22","E:\\repofrontend\\src\\components\\dashboard\\Product.js":"23"},{"size":695,"mtime":1649342852410,"results":"24","hashOfConfig":"25"},{"size":235,"mtime":1649342852375,"results":"26","hashOfConfig":"25"},{"size":375,"mtime":1649342852415,"results":"27","hashOfConfig":"25"},{"size":272,"mtime":1649342852414,"results":"28","hashOfConfig":"25"},{"size":1634,"mtime":1649342852416,"results":"29","hashOfConfig":"25"},{"size":758,"mtime":1649342852411,"results":"30","hashOfConfig":"25"},{"size":204,"mtime":1649342852413,"results":"31","hashOfConfig":"25"},{"size":5084,"mtime":1649342852412,"results":"32","hashOfConfig":"25"},{"size":506,"mtime":1649342852420,"results":"33","hashOfConfig":"25"},{"size":4454,"mtime":1649342852419,"results":"34","hashOfConfig":"25"},{"size":280,"mtime":1649342852418,"results":"35","hashOfConfig":"25"},{"size":4367,"mtime":1649347108047,"results":"36","hashOfConfig":"25"},{"size":5074,"mtime":1649348165776,"results":"37","hashOfConfig":"25"},{"size":3308,"mtime":1649342852421,"results":"38","hashOfConfig":"25"},{"size":1438,"mtime":1649342852422,"results":"39","hashOfConfig":"25"},{"size":1931,"mtime":1649342852376,"results":"40","hashOfConfig":"25"},{"size":1764,"mtime":1649342852414,"results":"41","hashOfConfig":"25"},{"size":2651,"mtime":1649342852411,"results":"42","hashOfConfig":"25"},{"size":247,"mtime":1649342852413,"results":"43","hashOfConfig":"25"},{"size":2173,"mtime":1649342852409,"results":"44","hashOfConfig":"25"},{"size":1930,"mtime":1649342852407,"results":"45","hashOfConfig":"25"},{"size":4590,"mtime":1649342852409,"results":"46","hashOfConfig":"25"},{"size":865,"mtime":1649342852408,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19yr31b",{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},"E:\\repofrontend\\src\\index.js",[],"E:\\repofrontend\\src\\App.js",[],"E:\\repofrontend\\src\\reportWebVitals.js",[],"E:\\repofrontend\\src\\layouts\\loader\\Loader.js",[],"E:\\repofrontend\\src\\routes\\Router.js",[],"E:\\repofrontend\\src\\layouts\\FullLayout.js",[],"E:\\repofrontend\\src\\layouts\\LoginLayout.js",[],"E:\\repofrontend\\src\\layouts\\HomeLayout.js",["101","102","103","104"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Navbar,\r\n  Collapse,\r\n  Nav,\r\n  NavItem,\r\n  NavbarBrand,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Dropdown,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport Logo from \"./Logo\";\r\nimport { ReactComponent as LogoWhite } from \"../assets/images/logos/adminprowhite.svg\";\r\nimport Bookingdrink from \"../assets/images/logos/bookingdrink.png\";\r\nimport user1 from \"../assets/images/users/user4.jpg\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { ImCart } from \"react-icons/im\";\r\n\r\nexport default function HomeLayout() {\r\n  const [category, setCategory] = useState([]);\r\n  useEffect(() => {\r\n    const getCategory = async () => {\r\n      const { data } = await axios.get(\"/api/category\");\r\n      setCategory(data);\r\n    };\r\n    getCategory();\r\n  }, []);\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n\r\n  const [dropdownOpen, setDropdownOpen] = React.useState(false);\r\n\r\n  const toggle = () => setDropdownOpen((prevState) => !prevState);\r\n  const Handletoggle = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n  const showMobilemenu = () => {\r\n    document.getElementById(\"sidebarArea\").classList.toggle(\"showSidebar\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar color=\"white\" light expand=\"md\" className=\"fix-header\">\r\n        <div className=\"d-flex align-items-center\">\r\n          <div className=\"d-lg-block d-none me-5 pe-3\">\r\n            <img\r\n              style={{ width: \"150px\", height: \"50px\" }}\r\n              src={Bookingdrink}\r\n            ></img>\r\n          </div>\r\n          <NavbarBrand href=\"/\">\r\n            <img src={Bookingdrink} className=\"d-lg-none\" />\r\n          </NavbarBrand>\r\n          <Button\r\n            color=\"primary\"\r\n            className=\" d-lg-none\"\r\n            onClick={() => showMobilemenu()}\r\n          >\r\n            <i className=\"bi bi-list\"></i>\r\n          </Button>\r\n        </div>\r\n        <div className=\"hstack gap-2\">\r\n          <Button\r\n            color=\"primary\"\r\n            size=\"sm\"\r\n            className=\"d-sm-block d-md-none\"\r\n            onClick={Handletoggle}\r\n          >\r\n            {isOpen ? (\r\n              <i className=\"bi bi-x\"></i>\r\n            ) : (\r\n              <i className=\"bi bi-three-dots-vertical\"></i>\r\n            )}\r\n          </Button>\r\n        </div>\r\n\r\n        <Collapse navbar isOpen={isOpen}>\r\n          <Nav className=\"me-auto\" navbar>\r\n            <NavItem>\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                Home\r\n              </Link>\r\n            </NavItem>\r\n            <Nav className=\"me-auto\" navbar>\r\n              <UncontrolledDropdown inNavbar nav>\r\n                <DropdownToggle caret nav>\r\n                  Danh Mục Sản Phẩm\r\n                </DropdownToggle>\r\n                <DropdownMenu end>\r\n                  {category.map(({ id, name }) => (\r\n                    <DropdownItem>{name}</DropdownItem>\r\n                  ))}\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n              <NavItem>\r\n                <Link to=\"/starter\" className=\"nav-link\">\r\n                  Về Chúng Tôi\r\n                </Link>\r\n              </NavItem>\r\n              <NavItem>\r\n                <Link to=\"/about\" className=\"nav-link\">\r\n                  Liên Hệ\r\n                </Link>\r\n              </NavItem>\r\n              <NavItem>\r\n                <Link to=\"\" className=\"nav-link\">\r\n                  <div className=\"cart-icon\">\r\n                    <div>\r\n                      <ImCart>ImCart</ImCart>\r\n                    </div>\r\n                  </div>\r\n                </Link>\r\n              </NavItem>\r\n            </Nav>\r\n            {/* <UncontrolledDropdown inNavbar nav>\r\n              <DropdownToggle caret nav>\r\n                DD Menu\r\n              </DropdownToggle>\r\n              <DropdownMenu end>\r\n                <DropdownItem>Option 1</DropdownItem>\r\n                <DropdownItem>Option 2</DropdownItem>\r\n                <DropdownItem divider />\r\n                <DropdownItem>Reset</DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown> */}\r\n          </Nav>\r\n          <Dropdown isOpen={dropdownOpen} toggle={toggle}>\r\n            <DropdownToggle color=\"transparent\">\r\n              <img\r\n                src={user1}\r\n                alt=\"profile\"\r\n                className=\"rounded-circle\"\r\n                width=\"30\"\r\n              ></img>\r\n            </DropdownToggle>\r\n            <DropdownMenu>\r\n              <DropdownItem header>Info</DropdownItem>\r\n              <DropdownItem>My Account</DropdownItem>\r\n              <DropdownItem>Edit Profile</DropdownItem>\r\n              <DropdownItem divider />\r\n              <DropdownItem>My Balance</DropdownItem>\r\n              <DropdownItem>Inbox</DropdownItem>\r\n              <DropdownItem>Logout</DropdownItem>\r\n            </DropdownMenu>\r\n          </Dropdown>\r\n        </Collapse>\r\n      </Navbar>\r\n      <Outlet />\r\n    </div>\r\n  );\r\n}\r\n","E:\\repofrontend\\src\\views\\Starter.js",[],"E:\\repofrontend\\src\\views\\ProductAdd.js",[],"E:\\repofrontend\\src\\views\\Product.js",[],"E:\\repofrontend\\src\\views\\Category.js",["105"],"import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  Button,\r\n  Table,\r\n  Modal,\r\n  ModalBody,\r\n  Input,\r\n  FormGroup,\r\n  Label,\r\n  Breadcrumb, BreadcrumbItem,\r\n} from \"reactstrap\";\r\nfunction Category() {\r\n  const [category, setCategory] = useState([]);\r\n  const [deleteId, setDeleteId] = useState(0);\r\n  const [editId, setEditId] = useState(0);\r\n  const [name, setName] = useState(\"\");\r\n  const [open, setOpen] = useState(false);\r\n  const [openDelete, setOpenDelete] = useState(false);\r\n  const getCategory = async () => {\r\n    const { data } = await axios.get(\"/api/category\");\r\n    setCategory(data);\r\n  };\r\n  useEffect(() => {\r\n    getCategory();\r\n  }, []);\r\n  const createProduct = async () => {\r\n    if (editId) {\r\n      const { data } = await axios.put(\"/api/category/\" + editId, {\r\n        name: name,\r\n      });\r\n\r\n    } else {\r\n      const { data } = await axios.post(\"/api/category\", { name: name });\r\n      console.log(data);\r\n\r\n    }\r\n\r\n    setOpen(false);\r\n    getCategory();\r\n  };\r\n  const deleteCategory = async () => {\r\n    await axios.delete(\"/api/category/\" + deleteId);\r\n    setOpenDelete(false);\r\n    getCategory();\r\n  };\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardBody>\r\n          <CardTitle tag=\"h5\">Danh Sách Sản Phẩm</CardTitle>\r\n          <div className=\"d-flex\">\r\n            <CardSubtitle className=\"mb-2 text-muted me-auto\" tag=\"h6\">\r\n              Tất cả sản phẩm có trong cửa hàng\r\n            </CardSubtitle>\r\n            <Breadcrumb >\r\n              <BreadcrumbItem><a href=\"/admin\">Dashboard</a></BreadcrumbItem>\r\n              <BreadcrumbItem active>Category</BreadcrumbItem>\r\n            </Breadcrumb>\r\n          </div>\r\n          <Button\r\n            onClick={() => setOpen(true)}\r\n            className=\"btn\"\r\n            color=\"primary\"\r\n          >\r\n            Thêm Danh Mục\r\n          </Button>\r\n          <Table className=\"no-wrap mt-3 align-middle\" responsive borderless>\r\n            <thead>\r\n              <tr>\r\n                <th>Id</th>\r\n                <th>Tên Danh Mục</th>\r\n                <th>Thao Tác</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {category.map((item, index) => (\r\n                <tr key={index} className=\"border-top\">\r\n                  <td>{item.id}</td>\r\n                  <td>{item.name}</td>\r\n                  <td>\r\n                    <button\r\n                      onClick={() => {\r\n                        setOpen(true);\r\n                        setEditId(item.id);\r\n                        setName(item.name);\r\n                      }}\r\n                      type=\"button\"\r\n                      class=\"btn btn-warning\"\r\n                    >\r\n                      Sửa\r\n                    </button>\r\n                    <button\r\n                      style={{ marginLeft: \"5px\" }}\r\n                      onClick={() => {\r\n\r\n                        setOpenDelete(true);\r\n                        setDeleteId(item.id);\r\n                      }}\r\n                      type=\"button\"\r\n                      class=\"btn btn-danger\"\r\n                    >\r\n                      Xóa\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </CardBody>\r\n      </Card>\r\n\r\n      <Modal isOpen={open} toggle={() => setOpen(false)}>\r\n        <ModalBody>\r\n          <FormGroup>\r\n            <Label for=\"categoryName\">Name</Label>\r\n            <Input\r\n              id=\"categoryName\"\r\n              name=\"name\"\r\n              placeholder=\"Category Name\"\r\n              type=\"name\"\r\n              onChange={(e) => {\r\n                setName(e.target.value);\r\n              }}\r\n              value={name}\r\n            />\r\n          </FormGroup>\r\n          <Button onClick={createProduct} className=\"btn\" color=\"primary\">\r\n            Thêm Danh Mục\r\n          </Button>\r\n\r\n        </ModalBody>\r\n      </Modal>\r\n      <Modal isOpen={openDelete} toggle={() => setOpenDelete(false)}>\r\n        <ModalBody>\r\n          <p>Delete Category?</p>\r\n          <Button onClick={deleteCategory} className=\"btn\" color=\"danger\">\r\n            Xóa\r\n          </Button>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Category;\r\n","E:\\repofrontend\\src\\views\\Login1.js",["106"],"import React, { Component } from 'react'\r\nimport { LoginService } from '../Service/Loginservice.js'\r\nimport { Input } from \"reactstrap\";\r\n\r\nclass Login1 extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: null,\r\n            password: null,\r\n            errorUsername: false,\r\n            errorPassword: false,\r\n            isSubmitting: false,\r\n        }\r\n    }\r\n\r\n    handlePhoneNumber = (event) => {\r\n        this.setState({ username: event.target.value, errorUsername: false })\r\n    };\r\n\r\n    handlePassword = (event) => {\r\n        this.setState({ password: event.target.value, errorPassword: false })\r\n    };\r\n\r\n    handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (this.state.username === null) {\r\n            this.setState({ errorUsername: true })\r\n        }\r\n        if (this.state.password === null) {\r\n            this.setState({ errorPassword: true })\r\n        }\r\n        if (this.state.username && this.state.password) {\r\n            this.setState({ isSubmitting: true });\r\n            console.log(this.state.username, this.state.password);\r\n            let [success, body] = await LoginService.login(this.state.username, this.state.password);\r\n\r\n            if (success) {\r\n                this.setState({ isSubmitting: false });\r\n                let token = body.data.access;\r\n                let refreshToken = body.data.access;\r\n                localStorage.setItem('token', token);\r\n                localStorage.setItem('refreshToken', refreshToken);\r\n                let [access, data] = await LoginService.getProvider();\r\n                if (access) {\r\n                    if (data.data.role_name === 'admin') {\r\n                        window.location = '#/active';\r\n                    } else {\r\n                        console.log('Bạn không có quyền truy cập vào trang web này');\r\n                    }\r\n                } else {\r\n                    console.log(body && body.message);\r\n                }\r\n                /*this.setState({phoneNumber: '', password:''});\r\n                window.location = '#/active';*/\r\n            } else {\r\n                if (body && body.errorCode === 401) {\r\n                    // Toast.Fail('Tên đăng nhập và mật khẩu không tồn tại');\r\n                    console.log('Tên đăng nhập và mật khẩu không tồn tại')\r\n                } else {\r\n                    console.log(body && body.message);\r\n                }\r\n                this.setState({ isSubmitting: false });\r\n                //this.setState({isSubmitting: false, phoneNumber: '', password:''});\r\n\r\n            }\r\n        }\r\n    };\r\n    render() {\r\n        const { errorUsername, errorPassword, isSubmitting } = this.state;\r\n        return (\r\n            <div className='login-background'>\r\n                <div className='login-content'>\r\n                    <p className='header-text'>Đăng nhập</p>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <div className='input-login-content'>\r\n                            <Input\r\n                                className='input-login'\r\n                                placeholder='Tên đăng nhập'\r\n                                value={this.state.phoneNumber}\r\n                                onChange={this.handlePhoneNumber}\r\n                            />\r\n                            {errorUsername &&\r\n                                <div className='error-text'>Bạn chưa nhập tên đăng nhập</div>\r\n                            }\r\n                        </div>\r\n                        <div className='input-login-content input-password'>\r\n                            <Input\r\n                                type='password'\r\n                                className='input-login'\r\n                                placeholder='Mật khẩu'\r\n                                value={this.state.password}\r\n                                onChange={this.handlePassword}\r\n                            />\r\n                            {errorPassword &&\r\n                                <div className='error-text'>Hãy nhập password</div>\r\n                            }\r\n                        </div>\r\n                        <a className=\"forget-password\" href=\"#/forget-password\">Quên mật khẩu</a><br />\r\n                        <button className='button-submit' disabled={isSubmitting}>ĐĂNG NHẬP</button>\r\n                    </form>\r\n                </div>\r\n                <div className=\"footer-ims\">\r\n                    <div className=\"footer-content\">\r\n                        <a className=\"text\" href=\"#/contacts\">Contact Us</a>\r\n                        <a className=\"text\" href=\"#/helps\">Helps</a>\r\n                        <a className=\"text\" href=\"#/termsofuse\">Terms of Use</a>\r\n                        <a className=\"text-policy\" href=\"#/privacy-policy\">Privacy policy </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default Login1;\r\n","E:\\repofrontend\\src\\views\\home\\Home.js",[],"E:\\repofrontend\\src\\views\\home\\ProductDetail.js",["107"],"import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardImg,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  CardText,\r\n  Button,\r\n  Container,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\nexport default function ProductDetail(props) {\r\n  const id = props.id;\r\n  const [product, setProduct] = useState(null);\r\n  const fetchData = async () => {\r\n    const { data } = await axios.get(\"/api/products/\" + id);\r\n    setProduct(data);\r\n  };\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n  console.log(product);\r\n  return (\r\n    <Container style={{ marginTop: \"75px\" }}>\r\n      {product && (\r\n        <Card>\r\n          <Row>\r\n            <Col md={6}>\r\n              <CardImg\r\n                width=\"450\"\r\n                alt=\"Card image cap\"\r\n                src={\"/upload/\" + product.image}\r\n                top\r\n              />\r\n            </Col>\r\n            <Col md={6}>\r\n              <CardBody>\r\n                <CardTitle tag=\"h5\"> <b>{product.title}</b></CardTitle>\r\n                <CardSubtitle className=\"mb-2 text-muted\" tag=\"h6\">\r\n                  {product.category?.name}\r\n                </CardSubtitle>\r\n                <CardText>{product.description}</CardText>\r\n                <Button color=\"success\"\r\n                  outline >Thêm Vào Giỏ</Button>\r\n              </CardBody>\r\n            </Col>\r\n          </Row>\r\n        </Card>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n","E:\\repofrontend\\src\\Service\\Loginservice.js",[],"E:\\repofrontend\\src\\layouts\\Sidebar.js",[],"E:\\repofrontend\\src\\layouts\\Header.js",["108","109","110","111","112","113"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Navbar,\r\n  Collapse,\r\n  Nav,\r\n  NavItem,\r\n  NavbarBrand,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Dropdown,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport Logo from \"./Logo\";\r\nimport images from \"../assets/images/logos/images.png\";\r\nimport user1 from \"../assets/images/users/user4.jpg\";\r\n\r\nconst Header = () => {\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n\r\n  const [dropdownOpen, setDropdownOpen] = React.useState(false);\r\n\r\n  const toggle = () => setDropdownOpen((prevState) => !prevState);\r\n  const Handletoggle = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n  const showMobilemenu = () => {\r\n    document.getElementById(\"sidebarArea\").classList.toggle(\"showSidebar\");\r\n  };\r\n  return (\r\n    <Navbar color=\"white\" light expand=\"md\" className=\"fix-header\">\r\n      <div className=\"d-flex align-items-center\">\r\n        <div className=\"d-lg-block d-none me-5 pe-3\">\r\n          <img src={images} height=\"32\" />\r\n        </div>\r\n        <NavbarBrand href=\"/\">\r\n          <img src={images} height={32} className=\"d-lg-none\" />\r\n        </NavbarBrand>\r\n        <Button\r\n          color=\"primary\"\r\n          className=\" d-lg-none\"\r\n          onClick={() => showMobilemenu()}\r\n        >\r\n          <i className=\"bi bi-list\"></i>\r\n        </Button>\r\n      </div>\r\n      <div className=\"hstack gap-2\">\r\n        <Button\r\n          color=\"primary\"\r\n          size=\"sm\"\r\n          className=\"d-sm-block d-md-none\"\r\n          onClick={Handletoggle}\r\n        >\r\n          {isOpen ? (\r\n            <i className=\"bi bi-x\"></i>\r\n          ) : (\r\n            <i className=\"bi bi-three-dots-vertical\"></i>\r\n          )}\r\n        </Button>\r\n      </div>\r\n\r\n      <Collapse navbar isOpen={isOpen}>\r\n        <Nav className=\"me-auto\" navbar>\r\n\r\n        </Nav>\r\n        <Dropdown isOpen={dropdownOpen} toggle={toggle}>\r\n          <DropdownToggle color=\"transparent\">\r\n            <img\r\n              src={user1}\r\n              alt=\"profile\"\r\n              className=\"rounded-circle\"\r\n              width=\"30\"\r\n            ></img>\r\n          </DropdownToggle>\r\n          <DropdownMenu>\r\n            <DropdownItem header>Info</DropdownItem>\r\n            <DropdownItem>My Account</DropdownItem>\r\n            <DropdownItem>Edit Profile</DropdownItem>\r\n            <DropdownItem divider />\r\n            <DropdownItem>My Balance</DropdownItem>\r\n            <DropdownItem>Inbox</DropdownItem>\r\n            <DropdownItem>Logout</DropdownItem>\r\n          </DropdownMenu>\r\n        </Dropdown>\r\n      </Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\nexport default Header;\r\n","E:\\repofrontend\\src\\layouts\\Logo.js",[],"E:\\repofrontend\\src\\components\\dashboard\\SalesChart.js",[],"E:\\repofrontend\\src\\components\\dashboard\\Feeds.js",[],"E:\\repofrontend\\src\\components\\dashboard\\ProductTables.js",["114"],"import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  Table,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Breadcrumb, BreadcrumbItem,\r\n} from \"reactstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ProductAdd from \"../../views/ProductAdd\";\r\n\r\nconst ProductTables = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [openMDelete, setOpenMDelete] = useState(false);\r\n  const [deleteId, setDeleteId] = useState(0);\r\n  const navigate = useNavigate();\r\n  const [products, setProducts] = useState([]);\r\n  const [currentProduct, setCurrentProduct] = useState({});\r\n  const fetchData = async () => {\r\n    const { data } = await axios.get(\"/api/products\");\r\n    setProducts(data);\r\n  };\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n  const navigateToAdd = () => {\r\n    // navigate(\"/product/add\");\r\n    setOpen(true);\r\n    setCurrentProduct(null);\r\n  };\r\n  const onClose = () => {\r\n    setOpen(false);\r\n    fetchData();\r\n  };\r\n  const deleteProduct = async () => {\r\n    const { data } = await axios.delete(\"/api/products/\" + deleteId);\r\n    console.log(data);\r\n    fetchData();\r\n    setOpenMDelete(false);\r\n  };\r\n  return (\r\n    <>\r\n      <div>\r\n        <Card>\r\n          <CardBody>\r\n            <CardTitle tag=\"h5\">Danh Sách Sản Phẩm</CardTitle>\r\n            <div className=\"d-flex\">\r\n              <CardSubtitle className=\"mb-2 text-muted me-auto\" tag=\"h6\">\r\n                Tất cả sản phẩm có trong cửa hàng\r\n              </CardSubtitle>\r\n\r\n              <Breadcrumb >\r\n                <BreadcrumbItem><a href=\"/admin\">Dashboard</a></BreadcrumbItem>\r\n                <BreadcrumbItem active>Product</BreadcrumbItem>\r\n              </Breadcrumb>\r\n\r\n            </div>\r\n            <Button onClick={navigateToAdd} className=\"btn\" color=\"primary\" >\r\n              Thêm\r\n            </Button>\r\n            <Table className=\"no-wrap mt-3 align-middle\" responsive borderless>\r\n              <thead>\r\n                <tr>\r\n                  <th>Tên Sản Phẩm</th>\r\n                  <th>Loại Sản Phẩm</th>\r\n                  <th>Giá Tiền</th>\r\n                  <th>Hình Ảnh</th>\r\n                  <th>Thao Tác</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {products.map((item, index) => (\r\n                  <tr key={index} className=\"border-top\">\r\n                    <td>{item.title}</td>\r\n                    <td>{item.category?.name}</td>\r\n                    <td>{item.price}</td>\r\n                    <td>\r\n                      <img\r\n                        src={\"/upload/\" + item.image}\r\n                        alt={item.title}\r\n                        height={50}\r\n                      ></img>\r\n                    </td>\r\n                    <td>\r\n                      <button\r\n                        onClick={() => {\r\n                          setOpen(true);\r\n                          setCurrentProduct(item);\r\n                        }}\r\n                        type=\"button\"\r\n                        class=\"btn btn-warning\"\r\n                      >\r\n                        Sửa\r\n                      </button>\r\n                      <button\r\n                        style={{ marginLeft: \"5px\" }}\r\n                        onClick={() => {\r\n                          setOpenMDelete(true);\r\n                          setDeleteId(item.id);\r\n                        }}\r\n                        type=\"button\"\r\n                        class=\"btn btn-danger\"\r\n                      >\r\n                        Xóa\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          </CardBody>\r\n        </Card>\r\n\r\n        <Modal isOpen={open} toggle={() => setOpen(false)}>\r\n          <ModalBody>\r\n            <ProductAdd onClose={onClose} product={currentProduct} />\r\n\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n      <Modal isOpen={openMDelete} toggle={() => setOpenMDelete(false)}>\r\n        <ModalHeader toggle={() => setOpenMDelete(false)}>Delete ?</ModalHeader>\r\n        <ModalBody>Bạn có muốn xóa sản phẩm này không?</ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"danger\" onClick={() => deleteProduct(deleteId)}>\r\n            Delete\r\n          </Button>{\" \"}\r\n          <Button onClick={() => setOpenMDelete(false)}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductTables;\r\n","E:\\repofrontend\\src\\components\\dashboard\\Product.js",["115"],"import { Link } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardImg,\r\n  CardSubtitle,\r\n  CardText,\r\n  CardTitle,\r\n  Button,\r\n} from \"reactstrap\";\r\n\r\nconst Product = (props) => {\r\n  const truncate = (input) =>\r\n    input.length > 20 ? `${input.substring(0, 20)}...` : input;\r\n  return (\r\n    <Card>\r\n      <CardImg\r\n        onClick={() => props.openModal(props.id)}\r\n        alt=\"Card image cap\"\r\n        src={props.image}\r\n        height=\"300\"\r\n      />\r\n      <CardBody className=\"p-4\">\r\n        <CardTitle tag=\"h5\" style={{ minHeight: \"40px\" }}>\r\n          {props.title}\r\n        </CardTitle>\r\n        <CardSubtitle>{truncate(props.subtitle)}</CardSubtitle>\r\n        <CardText className=\"mt-3\">{props.text}</CardText>\r\n        <Button color=\"primary\">Thêm Vào Giỏ</Button>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n",{"ruleId":"116","severity":1,"message":"117","line":17,"column":8,"nodeType":"118","messageId":"119","endLine":17,"endColumn":12},{"ruleId":"116","severity":1,"message":"120","line":18,"column":28,"nodeType":"118","messageId":"119","endLine":18,"endColumn":37},{"ruleId":"121","severity":1,"message":"122","line":51,"column":13,"nodeType":"123","endLine":54,"endColumn":14},{"ruleId":"121","severity":1,"message":"122","line":57,"column":13,"nodeType":"123","endLine":57,"endColumn":61},{"ruleId":"116","severity":1,"message":"124","line":33,"column":15,"nodeType":"118","messageId":"119","endLine":33,"endColumn":19},{"ruleId":"116","severity":1,"message":"125","line":1,"column":17,"nodeType":"118","messageId":"119","endLine":1,"endColumn":26},{"ruleId":"126","severity":1,"message":"127","line":24,"column":6,"nodeType":"128","endLine":24,"endColumn":8,"suggestions":"129"},{"ruleId":"116","severity":1,"message":"130","line":2,"column":10,"nodeType":"118","messageId":"119","endLine":2,"endColumn":14},{"ruleId":"116","severity":1,"message":"131","line":7,"column":3,"nodeType":"118","messageId":"119","endLine":7,"endColumn":10},{"ruleId":"116","severity":1,"message":"132","line":9,"column":3,"nodeType":"118","messageId":"119","endLine":9,"endColumn":23},{"ruleId":"116","severity":1,"message":"117","line":16,"column":8,"nodeType":"118","messageId":"119","endLine":16,"endColumn":12},{"ruleId":"121","severity":1,"message":"122","line":36,"column":11,"nodeType":"123","endLine":36,"endColumn":43},{"ruleId":"121","severity":1,"message":"122","line":39,"column":11,"nodeType":"123","endLine":39,"endColumn":65},{"ruleId":"116","severity":1,"message":"133","line":23,"column":9,"nodeType":"118","messageId":"119","endLine":23,"endColumn":17},{"ruleId":"116","severity":1,"message":"130","line":1,"column":10,"nodeType":"118","messageId":"119","endLine":1,"endColumn":14},"no-unused-vars","'Logo' is defined but never used.","Identifier","unusedVar","'LogoWhite' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'data' is assigned a value but never used.","'Component' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["134"],"'Link' is defined but never used.","'NavItem' is defined but never used.","'UncontrolledDropdown' is defined but never used.","'navigate' is assigned a value but never used.",{"desc":"135","fix":"136"},"Update the dependencies array to be: [fetchData]",{"range":"137","text":"138"},[523,525],"[fetchData]"]