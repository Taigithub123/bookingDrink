{"ast":null,"code":"var _jsxFileName = \"E:\\\\booking\\\\src\\\\repofrontend\\\\src\\\\contexts\\\\auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, createContext, useEffect } from \"react\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  isLoggedIn: false,\n  user: null,\n  isLoggingIn: false\n};\nexport const AuthStateContext = /*#__PURE__*/createContext();\nexport const AuthDispatchContext = /*#__PURE__*/createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"LOGIN_REQUEST\":\n      return { ...state,\n        isLoggedIn: false,\n        user: null,\n        isLoggingIn: true\n      };\n\n    case \"LOGIN_SUCCESS\":\n      return { ...state,\n        isLoggedIn: true,\n        user: action.payload.user,\n        isLoggingIn: false\n      };\n\n    case \"LOGIN_FAILURE\":\n      return { ...state,\n        isLoggedIn: false,\n        user: null,\n        isLoggingIn: false\n      };\n\n    case \"LOGOUT_SUCCESS\":\n      return { ...state,\n        ...initialState\n      };\n\n    default:\n      throw new Error(`Unknown action: ${action.type}`);\n  }\n};\n\nexport const signIn = (dispatch, userData) => {\n  localStorage.setItem(\"user\", JSON.stringify(userData));\n  return dispatch({\n    type: \"LOGIN_SUCCESS\",\n    payload: {\n      user: userData\n    }\n  });\n};\nexport const signOut = dispatch => {\n  localStorage.clear();\n  return dispatch({\n    type: \"LOGOUT_SUCCESS\"\n  });\n};\n\nconst AuthProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [persistedUser, setPersistedUser] = useLocalStorage(\"user\", null);\n  const persistedUserState = { ...initialState,\n    user: persistedUser,\n    isLoggedIn: persistedUser !== null ? true : false\n  }; // console.log(persistedUser);\n\n  const [state, dispatch] = useReducer(reducer, persistedUserState);\n  useEffect(() => {\n    setPersistedUser(state.user);\n  }, [state.isLoggedIn]);\n  return /*#__PURE__*/_jsxDEV(AuthDispatchContext.Provider, {\n    value: dispatch,\n    children: /*#__PURE__*/_jsxDEV(AuthStateContext.Provider, {\n      value: state,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthProvider, \"UTfNO/Z2Y5Hw4HohdyLfD3Ct2yY=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c = AuthProvider;\nexport default AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["E:/booking/src/repofrontend/src/contexts/auth.js"],"names":["React","useReducer","createContext","useEffect","useLocalStorage","initialState","isLoggedIn","user","isLoggingIn","AuthStateContext","AuthDispatchContext","reducer","state","action","type","payload","Error","signIn","dispatch","userData","localStorage","setItem","JSON","stringify","signOut","clear","AuthProvider","children","persistedUser","setPersistedUser","persistedUserState"],"mappings":"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","sourcesContent":["import React, { useReducer, createContext, useEffect } from \"react\";\r\nimport useLocalStorage from \"../hooks/useLocalStorage\";\r\n\r\nconst initialState = {\r\n  isLoggedIn: false,\r\n  user: null,\r\n  isLoggingIn: false,\r\n};\r\n\r\nexport const AuthStateContext = createContext();\r\nexport const AuthDispatchContext = createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN_REQUEST\":\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        user: null,\r\n        isLoggingIn: true,\r\n      };\r\n    case \"LOGIN_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        user: action.payload.user,\r\n        isLoggingIn: false,\r\n      };\r\n    case \"LOGIN_FAILURE\":\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        user: null,\r\n        isLoggingIn: false,\r\n      };\r\n    case \"LOGOUT_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        ...initialState,\r\n      };\r\n    default:\r\n      throw new Error(`Unknown action: ${action.type}`);\r\n  }\r\n};\r\n\r\nexport const signIn = (dispatch, userData) => {\r\n  localStorage.setItem(\"user\", JSON.stringify(userData));\r\n  return dispatch({\r\n    type: \"LOGIN_SUCCESS\",\r\n    payload: {\r\n      user: userData,\r\n    },\r\n  });\r\n};\r\n\r\nexport const signOut = (dispatch) => {\r\n  localStorage.clear();\r\n  return dispatch({\r\n    type: \"LOGOUT_SUCCESS\",\r\n  });\r\n};\r\n\r\nconst AuthProvider = ({ children }) => {\r\n  const [persistedUser, setPersistedUser] = useLocalStorage(\"user\", null);\r\n  const persistedUserState = {\r\n    ...initialState,\r\n    user: persistedUser,\r\n    isLoggedIn: persistedUser !== null ? true : false,\r\n  };\r\n  // console.log(persistedUser);\r\n  const [state, dispatch] = useReducer(reducer, persistedUserState);\r\n\r\n  useEffect(() => {\r\n    setPersistedUser(state.user);\r\n  }, [state.isLoggedIn]);\r\n\r\n  return (\r\n    <AuthDispatchContext.Provider value={dispatch}>\r\n      <AuthStateContext.Provider value={state}>\r\n        {children}\r\n      </AuthStateContext.Provider>\r\n    </AuthDispatchContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthProvider;\r\n"]},"metadata":{},"sourceType":"module"}