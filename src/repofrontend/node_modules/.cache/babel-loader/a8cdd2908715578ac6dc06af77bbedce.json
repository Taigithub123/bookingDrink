{"ast":null,"code":"var _jsxFileName = \"E:\\\\booking\\\\src\\\\repofrontend\\\\src\\\\contexts\\\\cart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, createContext, useEffect } from \"react\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  isCartOpen: false,\n  items: []\n};\nexport const CartStateContext = /*#__PURE__*/createContext();\nexport const CartDispatchContext = /*#__PURE__*/createContext({});\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"TOGGLE_CART_POPUP\":\n      return { ...state,\n        isCartOpen: !state.isCartOpen\n      };\n\n    case \"ADD_TO_CART\":\n      const id = action.payload.cartItem.props.id;\n      const isOld = state.items.map(item => item.props.id).includes(id);\n      let cartItems = null;\n\n      if (isOld) {\n        const items = state.items.map(item => {\n          if (item.props.id === id) {\n            return { ...item,\n              quantity: item.quantity + 1\n            };\n          }\n\n          return item;\n        });\n        cartItems = [...items];\n      } else {\n        cartItems = [...state.items, action.payload.cartItem];\n      } //console.log(cartItems);\n\n\n      return { ...state,\n        items: cartItems\n      };\n\n    case \"REMOVE_FROM_CART\":\n      return { ...state,\n        items: state.items.filter(item => item.props.id !== action.payload.cartItemId)\n      };\n\n    case \"CLEAR_CART\":\n      return { ...state,\n        ...initialState\n      };\n\n    case \"DECREAMENT\":\n      return { ...state,\n        items: state.items.map((item, index) => {\n          if (item.props.id === action.payload.cartItemId) {\n            if (item.quantity === 1) return item;\n            state.items.slice(index, index + 1);\n            return { ...item,\n              quantity: item.quantity - 1\n            };\n          }\n\n          return item;\n        })\n      };\n\n    case \"INCREAMENT\":\n      return { ...state,\n        items: state.items.map(item => {\n          if (item.props.id === action.payload.cartItemId) {\n            return { ...item,\n              quantity: item.quantity + 1\n            };\n          }\n\n          return item;\n        })\n      };\n\n    default:\n      throw new Error(`Unknown action: ${action.type}`);\n  }\n};\n\nexport const toggleCartPopup = dispatch => {\n  return dispatch({\n    type: \"TOGGLE_CART_POPUP\"\n  });\n};\nexport const addToCart = (dispatch, cartItem) => {\n  return dispatch({\n    type: \"ADD_TO_CART\",\n    payload: {\n      cartItem: cartItem\n    }\n  });\n};\nexport const removeFromCart = (dispatch, cartItemId) => {\n  return dispatch({\n    type: \"REMOVE_FROM_CART\",\n    payload: {\n      cartItemId: cartItemId\n    }\n  });\n};\nexport const decrementQty = (dispatch, cartItemId) => {\n  return dispatch({\n    type: \"DECREAMENT\",\n    payload: {\n      cartItemId: cartItemId\n    }\n  });\n};\nexport const incrementQty = (dispatch, cartItemId) => {\n  return dispatch({\n    type: \"INCREAMENT\",\n    payload: {\n      cartItemId: cartItemId\n    }\n  });\n};\nexport const clearCart = dispatch => {\n  return dispatch({\n    type: \"CLEAR_CART\"\n  });\n};\n\nconst CartProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [persistedCartItems, setPersistedCartItems] = useLocalStorage(\"cartItems\", []);\n  const persistedCartState = {\n    isCartOpen: false,\n    items: persistedCartItems || []\n  };\n  const [state, dispatch] = useReducer(reducer, persistedCartState);\n  useEffect(() => {\n    setPersistedCartItems(state.items);\n  }, [JSON.stringify(state.items)]);\n  return /*#__PURE__*/_jsxDEV(CartDispatchContext.Provider, {\n    value: dispatch,\n    children: /*#__PURE__*/_jsxDEV(CartStateContext.Provider, {\n      value: state,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"XP8qSprmRCPk8NXN1Z6i025ETsU=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["E:/booking/src/repofrontend/src/contexts/cart.js"],"names":["React","useReducer","createContext","useEffect","useLocalStorage","initialState","isCartOpen","items","CartStateContext","CartDispatchContext","reducer","state","action","type","id","payload","cartItem","props","isOld","map","item","includes","cartItems","quantity","filter","cartItemId","index","slice","Error","toggleCartPopup","dispatch","addToCart","removeFromCart","decrementQty","incrementQty","clearCart","CartProvider","children","persistedCartItems","setPersistedCartItems","persistedCartState","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useReducer, createContext, useEffect } from \"react\";\r\nimport useLocalStorage from \"../hooks/useLocalStorage\";\r\n\r\nconst initialState = {\r\n  isCartOpen: false,\r\n  items: [],\r\n};\r\n\r\nexport const CartStateContext = createContext();\r\nexport const CartDispatchContext = createContext({});\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"TOGGLE_CART_POPUP\":\r\n      return {\r\n        ...state,\r\n        isCartOpen: !state.isCartOpen,\r\n      };\r\n    case \"ADD_TO_CART\":\r\n      const id = action.payload.cartItem.props.id;\r\n      const isOld = state.items.map((item) => item.props.id).includes(id);\r\n      let cartItems = null;\r\n      if (isOld) {\r\n        const items = state.items.map((item) => {\r\n          if (item.props.id === id) {\r\n            return {\r\n              ...item,\r\n              quantity: item.quantity + 1,\r\n            };\r\n          }\r\n          return item;\r\n        });\r\n        cartItems = [...items];\r\n      } else {\r\n        cartItems = [...state.items, action.payload.cartItem];\r\n      }\r\n      //console.log(cartItems);\r\n      return {\r\n        ...state,\r\n        items: cartItems,\r\n      };\r\n    case \"REMOVE_FROM_CART\":\r\n      return {\r\n        ...state,\r\n        items: state.items.filter(\r\n          (item) => item.props.id !== action.payload.cartItemId\r\n        ),\r\n      };\r\n    case \"CLEAR_CART\":\r\n      return {\r\n        ...state,\r\n        ...initialState,\r\n      };\r\n    case \"DECREAMENT\":\r\n      return {\r\n        ...state,\r\n        items: state.items.map((item, index) => {\r\n          if (item.props.id === action.payload.cartItemId) {\r\n            if (item.quantity === 1) return item;\r\n            state.items.slice(index, index + 1);\r\n            return {\r\n              ...item,\r\n              quantity: item.quantity - 1,\r\n            };\r\n          }\r\n          return item;\r\n        }),\r\n      };\r\n\r\n    case \"INCREAMENT\":\r\n      return {\r\n        ...state,\r\n        items: state.items.map((item) => {\r\n          if (item.props.id === action.payload.cartItemId) {\r\n            return {\r\n              ...item,\r\n              quantity: item.quantity + 1,\r\n            };\r\n          }\r\n          return item;\r\n        }),\r\n      };\r\n\r\n    default:\r\n      throw new Error(`Unknown action: ${action.type}`);\r\n  }\r\n};\r\n\r\nexport const toggleCartPopup = (dispatch) => {\r\n  return dispatch({\r\n    type: \"TOGGLE_CART_POPUP\",\r\n  });\r\n};\r\n\r\nexport const addToCart = (dispatch, cartItem) => {\r\n  return dispatch({\r\n    type: \"ADD_TO_CART\",\r\n    payload: {\r\n      cartItem: cartItem,\r\n    },\r\n  });\r\n};\r\n\r\nexport const removeFromCart = (dispatch, cartItemId) => {\r\n  return dispatch({\r\n    type: \"REMOVE_FROM_CART\",\r\n    payload: {\r\n      cartItemId: cartItemId,\r\n    },\r\n  });\r\n};\r\n\r\nexport const decrementQty = (dispatch, cartItemId) => {\r\n  return dispatch({\r\n    type: \"DECREAMENT\",\r\n    payload: {\r\n      cartItemId: cartItemId,\r\n    },\r\n  });\r\n};\r\n\r\nexport const incrementQty = (dispatch, cartItemId) => {\r\n  return dispatch({\r\n    type: \"INCREAMENT\",\r\n    payload: {\r\n      cartItemId: cartItemId,\r\n    },\r\n  });\r\n};\r\n\r\nexport const clearCart = (dispatch) => {\r\n  return dispatch({\r\n    type: \"CLEAR_CART\",\r\n  });\r\n};\r\n\r\nconst CartProvider = ({ children }) => {\r\n  const [persistedCartItems, setPersistedCartItems] = useLocalStorage(\r\n    \"cartItems\",\r\n    []\r\n  );\r\n  const persistedCartState = {\r\n    isCartOpen: false,\r\n    items: persistedCartItems || [],\r\n  };\r\n  const [state, dispatch] = useReducer(reducer, persistedCartState);\r\n  useEffect(() => {\r\n    setPersistedCartItems(state.items);\r\n  }, [JSON.stringify(state.items)]);\r\n  return (\r\n    <CartDispatchContext.Provider value={dispatch}>\r\n      <CartStateContext.Provider value={state}>\r\n        {children}\r\n      </CartStateContext.Provider>\r\n    </CartDispatchContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n"]},"metadata":{},"sourceType":"module"}